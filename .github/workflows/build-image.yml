name: Docker Image CI

env:
  REGISTRY: ghcr.io
  BRANCH_NAME: ${{ github.head_ref || github.ref_name }}

on:
  push:
    branches:
      - '**'
      - '!main'
  pull_request:
    branches:
      - 'main'

jobs:
  build-base:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3.4.0

      - name: downcase REPO
        run: echo "REPO=${GITHUB_REPOSITORY,,}" >> ${GITHUB_ENV}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v4.3.0
        with:
          images: |
            ghcr.io/${{ env.REPO }}-base

      - name: Build and export
        uses: docker/build-push-action@v4
        with:
          context: ./base/
          outputs: type=docker,dest=/tmp/base.tar
          tags: ${{ env.REGISTRY }}/streaming-base:${{ env.BRANCH_NAME }}
      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: streaming-base
          path: /tmp/base.tar



  build-images:
    needs: build-base
    strategy:
      matrix:
        framework: [cvlc, ffmpeg, gstreamer]

    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3.4.0

      - name: downcase REPO
        run: echo "REPO=${GITHUB_REPOSITORY,,}" >> ${GITHUB_ENV}

      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: streaming-base
          path: /tmp
      - name: Load image
        run: |
          docker load --input /tmp/base.tar
          docker image ls -a

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v4.3.0
        with:
          images: |
            ghcr.io/${{ env.REPO }}-${{ matrix.framework }}


      - name: Build and load image
        uses: docker/build-push-action@v4.0.0
        with:
          context: ./${{ matrix.framework }}/
          push: false
          load: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}


      - name: Inspect Docker image
        run: docker image inspect $(docker image ls --filter "label=org.opencontainers.image.title=streaming" -q)
